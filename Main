  import de.bezier.data.sql.*;
SQLite db;

Hjerte hjerte;
ArrayList<Indgreb> indgreb = new ArrayList<Indgreb>();
ArrayList<String> infoTekster = new ArrayList<String>();
ArrayList<Knap> indgrebKnappe = new ArrayList<Knap>();

//indgrebknappe variabler
PVector knapDimensioner = new PVector(250,120);
PVector knapSpacing = new PVector(300, 160);
PVector startKnapPos = new PVector(50, 100);

//Sideskiftknappe variabler
PVector sideskiftKnapDimensioner = new PVector(knapDimensioner.x+knapSpacing.x,120); //120 er ændret fra 125
PVector sideskiftKnapPosition = new PVector(50,650);
Knap sideskiftKnap;

//Knap info UI variabler
ArrayList<InfoKnap> infoKnappe = new ArrayList<InfoKnap>();
PVector infoKnapDimensions = new PVector(25,25);
int infoKnapSpacing = 10;



int infoTextFontSize = 32;
PVector infoTextPos = new PVector(50,50);

//data UI
PVector dataStartPosition = new PVector(90, 250);
int dataTextFontSize = 30;
int dataTextSpacing = 100;
ArrayList<InfoKnap> dataInfoKnappe = new ArrayList<InfoKnap>();
int dataInfoKnappeXPos = 90; //ændret fra 50

ArrayList<String> dataInfoTekster = new ArrayList<String>();

boolean mainSide;

boolean inInfoKnap = false;

String infoTekst = "";

float tidsMultiplier = 1;

//tidsMultiplierUI
Knap tidsKnap1;
Knap tidsKnap2;

PVector tidsKnapPos = new PVector(890, 550); //ændret fra 890, 600
PVector tidsKnapDimensioner = new PVector(50, 50);
float tidsKnapSpacing = 20;

//Genstartknap
Knap genstartKnap;

PVector genstartKnapPos = new PVector(830, 650); //ændret fra 855, 675
PVector genstartKnapDimensioner = new PVector(250, 120); //ændret fra 200, 100

//kondi knappe
PVector kondiKnappePos = new PVector(90, 210); //ændret fra 50, 210
PVector kondiKnappeDimensioner = new PVector(100, 65);
float kondiKnappeSpacing = 110;

InfoKnap kondiInfoKnap;
String kondiInfoKnapTekst = "En god kondi svarer til en lavere hvilepuls. Det \nbetyder hjertet ikke skal arbejde så hårdt, så der \ner mindre chance for hjerterelaterede skader.";

Knap kondiDaarligt;
InfoKnap kondiDaarligtInfo;
String kondiDaarligtInfoTekst = "Knappen sætter hvilepulsen til at være 80 BPM. \nDette vil typisk være hvilepulsen for en person \nmed dårlig kondi.";

Knap kondiMiddel;
InfoKnap kondiMiddelInfo;
String kondiMiddelInfoTekst = "Knappen sætter hvilepulsen til at være 60 BPM. \nDette vil typisk være hvilepulsen for en person \nmed gennemsnitlig kondi.";

Knap kondiGodt;
InfoKnap kondiGodtInfo;
String kondiGodtInfoTekst = "Knappen sætter hvilepulsen til at være 40 BPM. \nDette vil typisk være hvilepulsen for en person \nmed god kondi.";

int kondiVaerdi = 1; // 0 == dårlig, 1 == middel, 2 == godt

int daarligKondiPuls = 80; int middelKondiPuls = 60; int godKondiPuls = 40;

PFont font;

InfoKnap BPMInfoKnap;
InfoKnap MMHGInfoKnap;
PVector infoKnapDimensioner = new PVector(40, 40);

void setup()
{
  
  size(1200, 800, P3D);

  font = createFont("comic-sans-ms_[allfont.net].ttf", 20);

  mainSide = true;

  PVector Hjertepos = new PVector(950, 315);

  hjerte = new Hjerte(Hjertepos, 60, 110, 70);

  BPMInfoKnap = new InfoKnap("Her står værdien af pulsen, angivet i enheden BPM. \nBPM står for beats per minute.", new PVector(Hjertepos.x - 110, Hjertepos.y + 68), infoKnapDimensioner);
  MMHGInfoKnap = new InfoKnap("Her står værdien af blodtrykket: \n(Systolisk)/(Diastolisk). Enheden mmHg er: \nmillimeter kviksølv, og er en måleenhed for tryk.", new PVector(Hjertepos.x - 185, Hjertepos.y + 118), infoKnapDimensioner);

  kondiKnappePos.y += dataStartPosition.y - 190;

  //Database kode start...
  
  db = new SQLite(this, "HjerteData.sqlite");
  
  if(db.connect())
  {    
    db.query("SELECT * FROM HjerteData");
    
    tidsMultiplier = db.getFloat("TidsMultiplier");
    hjerte.stoffer.get(0).Add(db.getFloat("Genstande"));
    hjerte.stoffer.get(1).Add(db.getFloat("Cigaretter"));
    kondiVaerdi = db.getInt("Kondi");
  } 
 
  db.close();

  genstartKnap = new Knap("Genstart", genstartKnapDimensioner, genstartKnapPos, false);

  //Database kode slut...

  //initialiser preset
  //Presets.add(new Preset());

  //Inpop();itialiser indgreb (String navn, String stofPaavirkning, float tilfoersel)
  indgreb.add(new Indgreb("+ Cigaret", "Nikotin", 1));
  indgreb.add(new Indgreb("- Cigaret", "Nikotin", -1));
  indgreb.add(new Indgreb("+ Genstand", "Alkohol", 1));
  indgreb.add(new Indgreb("- Genstand", "Alkohol", -1));
  indgreb.add(new Indgreb("Start løb", "Alkohol", 1));
  indgreb.add(new Indgreb("Stop løb", "Alkohol", 1));

  //infoTekster til indgrebsknapper
  infoTekster.add("Knappen simulerer rygning af én cigaret.");
  infoTekster.add("Knappen simulerer fjernelse af én cigaret.");
  infoTekster.add("Knappen simulerer indtagelsen af én \ngenstand alkohol.");
  infoTekster.add("Knappen simulerer fjernelse af én \ngenstand alkohol fra blodet.");
  infoTekster.add("Knappen simulerer at der bliver løbet én tur. \nDer kan klikkes på knappen: 'Stop løb', for at \nstoppe med at løbe.");
  infoTekster.add("Knappen stopper én løbetur, hvis den \ner i gang og simulerer den proces som \nsker ved afslapning efter cardio træning.");

  //infoTekster til infosiden
  dataInfoTekster.add("Der vises hvor meget alkohol, der er i blodet, i \nform af genstande. Alkohol er lineært \naftagende i blodet");
  dataInfoTekster.add("Der vises hvor meget nikotin, der er i blodet, i \nform af cigaretter. Mængden af nikotin i \nblodet er eksponentielt aftagende.");

  //Initialiser knappe
  for(int i = 0; i < indgreb.size(); i++)
  {
    Indgreb a = indgreb.get(i);
    PVector pos = new PVector(startKnapPos.x, startKnapPos.y);
    if(i % 2 != 0)
    {
      pos.x += knapSpacing.x;
    }
    
    pos.y += knapSpacing.y * (i / 2);
    
    indgrebKnappe.add(new Knap(a.navn, knapDimensioner, pos, false));
    infoKnappe.add(new InfoKnap(infoTekster.get(i), new PVector(pos.x + knapDimensioner.x-(infoKnapDimensions.x+infoKnapSpacing), pos.y+infoKnapSpacing), infoKnapDimensions));
  }

    for(int i = 0; i < dataInfoTekster.size(); i++)
    {
      dataInfoKnappe.add(new InfoKnap(dataInfoTekster.get(i), new PVector(dataInfoKnappeXPos - infoKnapDimensions.x - 10, dataStartPosition.y + dataTextSpacing * i - infoKnapDimensions.y  ), infoKnapDimensions));
    }

   sideskiftKnap = new Knap("Info", sideskiftKnapDimensioner, sideskiftKnapPosition, true);

    tidsKnap1 = new Knap("<", tidsKnapDimensioner, tidsKnapPos, false);
    tidsKnap2 = new Knap(">", tidsKnapDimensioner, new PVector(tidsKnapPos.x + tidsKnapDimensioner.x + tidsKnapSpacing, tidsKnapPos.y), false);

    PVector kondiInfoKnapDimensioner = new PVector(20, 20);
    PVector kondiInfoKnapOffset = new PVector(3, 3);

    kondiDaarligt = new Knap("Dårlig", kondiKnappeDimensioner, new PVector(kondiKnappePos.x, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size()), 18, false);
    kondiDaarligtInfo = new InfoKnap("i", new PVector(kondiKnappePos.x + kondiInfoKnapOffset.x, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size() + kondiInfoKnapOffset.y), kondiInfoKnapDimensioner);
    
    kondiMiddel = new Knap("Middel", kondiKnappeDimensioner, new PVector(kondiKnappePos.x + kondiKnappeSpacing, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size()), 18, false);
    kondiMiddelInfo = new InfoKnap("i", new PVector(kondiKnappePos.x + kondiKnappeSpacing + kondiInfoKnapOffset.x, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size() + kondiInfoKnapOffset.y), kondiInfoKnapDimensioner);
    
    kondiGodt = new Knap("God", kondiKnappeDimensioner, new PVector(kondiKnappePos.x + kondiKnappeSpacing * 2, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size()), 18, false);
    kondiGodtInfo = new InfoKnap("i", new PVector(kondiKnappePos.x + kondiKnappeSpacing * 2 + kondiInfoKnapOffset.x, kondiKnappePos.y + dataTextSpacing * hjerte.stoffer.size() + kondiInfoKnapOffset.y), kondiInfoKnapDimensioner);
    
    kondiInfoKnap = new InfoKnap("i", new PVector(dataInfoKnappeXPos - infoKnapDimensions.x - 10, dataStartPosition.y + dataTextSpacing * dataInfoTekster.size() - infoKnapDimensions.y  ), infoKnapDimensions);

    frameRate(30);

}

void exit() //slet alt fra database, og gem resultatet til sidst.
{
  db = new SQLite(this, "HjerteData.sqlite");
  
  if(db.connect())
  {
    db.execute("DELETE FROM HjerteData");
 
   db.execute("INSERT INTO HjerteData VALUES (" + tidsMultiplier + ", " + hjerte.stoffer.get(0).vaerdi + ", " + hjerte.stoffer.get(1).vaerdi + ", " + kondiVaerdi + ")");
 
  }
  
  db.close();
  
  
  super.exit();
}

void draw()
{
  clear();
  
  background(84,192,255);
 
  textFont(font);
  
  hjerte.Draw();
  
  sideskiftKnap.Draw(true);
  
  genstartKnap.Draw(true);
  
  BPMInfoKnap.Draw();
  MMHGInfoKnap.Draw();
  
  
  
  push();
  textAlign(CENTER);
  text("Tid: x" + tidsMultiplier, tidsKnapPos.x +  + tidsKnapDimensioner.x + tidsKnapSpacing / 2, tidsKnapPos.y - 25);
  tidsKnap1.Draw(true);
  tidsKnap2.Draw(true);
  pop();
  
  if(kondiVaerdi == 0)
  {
    hjerte.hvilePuls = daarligKondiPuls;
  }
  else if(kondiVaerdi == 1)
  {
    hjerte.hvilePuls = middelKondiPuls;
  }
  else if(kondiVaerdi == 2)
  {
    hjerte.hvilePuls = godKondiPuls;
  }
  
  if(mainSide)
  {
    boolean anyFalse = false;
  for(int i = 0; i < infoKnappe.size(); i++)
  {
      if(OnButton(infoKnappe.get(i).knap))
      {
        //Indenfor infoKnap
        inInfoKnap = true;
        anyFalse = true;
        infoTekst = infoTekster.get(i);
      }
  }
  if(!anyFalse)
  {
   inInfoKnap = false;
   infoTekst = "";
  }
    
    
    for(int i = 0; i < indgrebKnappe.size(); i++)
    {
    if(indgreb.get(i).navn == "Start løb")
        {
          if(hjerte.loeber == true)
          {
            indgrebKnappe.get(i).permaActivated = true;
          }
          else
          {
            indgrebKnappe.get(i).permaActivated = false;
          }
          
        }
            
        if(indgreb.get(i).navn == "Stop løb")
        {
          if(hjerte.loeber == false)
          {
            indgrebKnappe.get(i).permaActivated = true;
          }
          else
          {
            indgrebKnappe.get(i).permaActivated = false;
          }

        }
      
      indgrebKnappe.get(i).Draw(!inInfoKnap);
    
    
    infoKnappe.get(i).Draw();
    }
  }
  else
  {
    for(int i = 0; i < hjerte.stoffer.size(); i++)
    {
      push();
      textAlign(LEFT);
      textSize(dataTextFontSize);
      text(hjerte.stoffer.get(i).navn + ": " + RoundToDecimalPoints(hjerte.stoffer.get(i).vaerdi, 3) + " " + hjerte.stoffer.get(i).enhed, dataStartPosition.x, dataStartPosition.y + dataTextSpacing * i);
      pop();
      
      dataInfoKnappe.get(i).Draw();
    }
    
    push();
      textAlign(LEFT);
      textSize(dataTextFontSize);
      String s = "";
      if(kondiVaerdi == 0)
      {
        s = "Dårlig";
      }
      else if(kondiVaerdi == 1)
      {
        s = "Middel";
      }
      else if(kondiVaerdi == 2)
      {
        s = "God";
      }
      
      text("Kondi: " + s, dataStartPosition.x, dataStartPosition.y + dataTextSpacing * hjerte.stoffer.size());
      pop();
    
    kondiInfoKnap.Draw();
    
    boolean noButton = true;
    
    boolean anyFalse = false;
      if(OnButton(kondiDaarligtInfo.knap))
      {
        //Indenfor infoKnap
        inInfoKnap = true;
        anyFalse = true;
        infoTekst = kondiDaarligtInfoTekst;
        noButton = false;
      }
      if(OnButton(kondiMiddelInfo.knap))
      {
        //Indenfor infoKnap
        inInfoKnap = true;
        anyFalse = true;
        infoTekst = kondiMiddelInfoTekst;
        noButton = false;
      }
      if(OnButton(kondiGodtInfo.knap))
      {
        //Indenfor infoKnap
        inInfoKnap = true;
        anyFalse = true;
        infoTekst = kondiGodtInfoTekst;
        noButton = false;
      }
  if(!anyFalse)
  {
   inInfoKnap = false;
   infoTekst = "";
  }
    
    kondiDaarligt.Draw(!inInfoKnap);
    kondiDaarligtInfo.Draw();
    
    kondiMiddel.Draw(!inInfoKnap);
    kondiMiddelInfo.Draw();
    
    kondiGodt.Draw(!inInfoKnap);
    kondiGodtInfo.Draw();
    
    
    
    for(int i = 0; i < dataInfoKnappe.size(); i++)
    {
      if(OnButton(dataInfoKnappe.get(i).knap))
      {
        //Indenfor dataInfoKnap        
        infoTekst = dataInfoTekster.get(i);
        noButton = false;
        
      } 
    }
    
    if(OnButton(kondiInfoKnap.knap))
    {
      //Indenfor dataInfoKnap        
        infoTekst = kondiInfoKnapTekst;
        noButton = false;
    }
    
    if(noButton)
    {
      infoTekst = "";
    }
    
    if(kondiVaerdi == 0)
    {
      kondiDaarligt.permaActivated = true;
      kondiMiddel.permaActivated = false;
      kondiGodt.permaActivated = false;
    }
    else if(kondiVaerdi == 1)
    {
      kondiDaarligt.permaActivated = false;
      kondiMiddel.permaActivated = true;
      kondiGodt.permaActivated = false;
    }
    else if(kondiVaerdi == 2)
    {
      kondiDaarligt.permaActivated = false;
      kondiMiddel.permaActivated = false;
      kondiGodt.permaActivated = true;
    }
    
  }
  
  if(OnButton(BPMInfoKnap.knap))
  {
    infoTekst = BPMInfoKnap.tekst;
  }
  if(OnButton(MMHGInfoKnap.knap))
  {
    infoTekst = MMHGInfoKnap.tekst;
  }
  
  if(infoTekst != "")
  {
    
    //boks tegnes bag infotekst
    push();
    
    translate(0,0,1); //placere det forrest
    
    fill(255,150,150);
        
    if(infoTekst.length() < 50)
    {
      rect(0,0,820,80);
    }
    if(infoTekst.length() < 100 && infoTekst.length() > 50)
    {
      rect(0,0,820,140);
    }
    if(infoTekst.length() > 100)
    {
      rect(0,0,820,200);
    }
    
    
    
    
    pop();

    
    //infotekst tegnes
    push();
    
    translate(0,0,1); //placere det ovenpå
    
    textAlign(LEFT);
    textSize(infoTextFontSize);
    
    text(infoTekst, infoTextPos.x, infoTextPos.y);    
    
    
    
    pop();
    
    
    
  }
  
}

float RoundToDecimalPoints(float x, int n)
  {
    float temp = x;
    temp *= pow(10, n);
    temp = round(temp);
    temp /= pow(10, n);
    return temp;
  }

boolean OnButton(Knap a)
{
  if(mouseX>a.position.x && mouseY>a.position.y && mouseX<a.position.x+a.dimensions.x && mouseY <a.position.y+a.dimensions.y)
  {
    return true;
  }
  
  return false;
}

void mouseClicked()
{
  
  if(OnButton(genstartKnap))
  {
   //genstart
   
   tidsMultiplier = 1;
   
   kondiVaerdi = 1;
   
   for(int i = 0; i < hjerte.stoffer.size(); i++)
   {
    hjerte.stoffer.get(i).Add(-hjerte.stoffer.get(i).vaerdi); 
   }
   
   hjerte.SetLoeb(false);
   hjerte.loebeYPuls = 0;
   
  }
  
  
  if(OnButton(tidsKnap1))
      {
        tidsMultiplier /= 2;
      }
   if(OnButton(tidsKnap2))
      {
        tidsMultiplier *= 2;
      }  
  
  if(mainSide)
  {
    if(!inInfoKnap)
    {
       for(int i = 0; i < indgrebKnappe.size(); i++)
      {
        if(OnButton(indgrebKnappe.get(i)))
        {
        //lav indgreb
        if(indgreb.get(i).navn == "Start løb")
        {
          hjerte.SetLoeb(true);
        }
        else if(indgreb.get(i).navn == "Stop løb")
        {
          hjerte.SetLoeb(false);
        }
        else
        {
          hjerte.LavIndgreb(indgreb.get(i));
        }
        
        }
      }  
    }
    
    if(OnButton(sideskiftKnap))
      {
        //skift side
        
        mainSide = !mainSide;
        sideskiftKnap.tekst = "Indgreb";
      }
    
  }
  else
  { 
    if(OnButton(sideskiftKnap))
      {
        //skift side
        
        mainSide = !mainSide;
        sideskiftKnap.tekst = "Info";
      } 
      
      if(OnButton(kondiDaarligt))
      {
        kondiVaerdi = 0;
      }
      
      if(OnButton(kondiMiddel))
      {
        kondiVaerdi = 1;
      }
      
      if(OnButton(kondiGodt))
      {
        kondiVaerdi = 2;
      }
      
  }
  
  
  
  
  
}
